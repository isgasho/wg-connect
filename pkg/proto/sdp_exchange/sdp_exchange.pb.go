// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sdp_exchange.proto

package sdp_exchange

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type OfferMessage struct {
	Token                *Token   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Body                 string   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferMessage) Reset()         { *m = OfferMessage{} }
func (m *OfferMessage) String() string { return proto.CompactTextString(m) }
func (*OfferMessage) ProtoMessage()    {}
func (*OfferMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88d59dbcf37a6c3, []int{0}
}

func (m *OfferMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferMessage.Unmarshal(m, b)
}
func (m *OfferMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferMessage.Marshal(b, m, deterministic)
}
func (m *OfferMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferMessage.Merge(m, src)
}
func (m *OfferMessage) XXX_Size() int {
	return xxx_messageInfo_OfferMessage.Size(m)
}
func (m *OfferMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferMessage.DiscardUnknown(m)
}

var xxx_messageInfo_OfferMessage proto.InternalMessageInfo

func (m *OfferMessage) GetToken() *Token {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *OfferMessage) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type OfferResponse struct {
	Code                 string   `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferResponse) Reset()         { *m = OfferResponse{} }
func (m *OfferResponse) String() string { return proto.CompactTextString(m) }
func (*OfferResponse) ProtoMessage()    {}
func (*OfferResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88d59dbcf37a6c3, []int{1}
}

func (m *OfferResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferResponse.Unmarshal(m, b)
}
func (m *OfferResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferResponse.Marshal(b, m, deterministic)
}
func (m *OfferResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferResponse.Merge(m, src)
}
func (m *OfferResponse) XXX_Size() int {
	return xxx_messageInfo_OfferResponse.Size(m)
}
func (m *OfferResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferResponse.DiscardUnknown(m)
}

var xxx_messageInfo_OfferResponse proto.InternalMessageInfo

func (m *OfferResponse) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

type PeerMessage struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerMessage) Reset()         { *m = PeerMessage{} }
func (m *PeerMessage) String() string { return proto.CompactTextString(m) }
func (*PeerMessage) ProtoMessage()    {}
func (*PeerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88d59dbcf37a6c3, []int{2}
}

func (m *PeerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerMessage.Unmarshal(m, b)
}
func (m *PeerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerMessage.Marshal(b, m, deterministic)
}
func (m *PeerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerMessage.Merge(m, src)
}
func (m *PeerMessage) XXX_Size() int {
	return xxx_messageInfo_PeerMessage.Size(m)
}
func (m *PeerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_PeerMessage proto.InternalMessageInfo

func (m *PeerMessage) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type PeerResponse struct {
	BodyJson             string   `protobuf:"bytes,1,opt,name=body_json,json=bodyJson,proto3" json:"body_json,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PeerResponse) Reset()         { *m = PeerResponse{} }
func (m *PeerResponse) String() string { return proto.CompactTextString(m) }
func (*PeerResponse) ProtoMessage()    {}
func (*PeerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88d59dbcf37a6c3, []int{3}
}

func (m *PeerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PeerResponse.Unmarshal(m, b)
}
func (m *PeerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PeerResponse.Marshal(b, m, deterministic)
}
func (m *PeerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PeerResponse.Merge(m, src)
}
func (m *PeerResponse) XXX_Size() int {
	return xxx_messageInfo_PeerResponse.Size(m)
}
func (m *PeerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PeerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PeerResponse proto.InternalMessageInfo

func (m *PeerResponse) GetBodyJson() string {
	if m != nil {
		return m.BodyJson
	}
	return ""
}

type Offer struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Offer) Reset()         { *m = Offer{} }
func (m *Offer) String() string { return proto.CompactTextString(m) }
func (*Offer) ProtoMessage()    {}
func (*Offer) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88d59dbcf37a6c3, []int{4}
}

func (m *Offer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Offer.Unmarshal(m, b)
}
func (m *Offer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Offer.Marshal(b, m, deterministic)
}
func (m *Offer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Offer.Merge(m, src)
}
func (m *Offer) XXX_Size() int {
	return xxx_messageInfo_Offer.Size(m)
}
func (m *Offer) XXX_DiscardUnknown() {
	xxx_messageInfo_Offer.DiscardUnknown(m)
}

var xxx_messageInfo_Offer proto.InternalMessageInfo

func (m *Offer) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Answer struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Answer) Reset()         { *m = Answer{} }
func (m *Answer) String() string { return proto.CompactTextString(m) }
func (*Answer) ProtoMessage()    {}
func (*Answer) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88d59dbcf37a6c3, []int{5}
}

func (m *Answer) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Answer.Unmarshal(m, b)
}
func (m *Answer) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Answer.Marshal(b, m, deterministic)
}
func (m *Answer) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Answer.Merge(m, src)
}
func (m *Answer) XXX_Size() int {
	return xxx_messageInfo_Answer.Size(m)
}
func (m *Answer) XXX_DiscardUnknown() {
	xxx_messageInfo_Answer.DiscardUnknown(m)
}

var xxx_messageInfo_Answer proto.InternalMessageInfo

func (m *Answer) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

type Token struct {
	Body                 string   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_c88d59dbcf37a6c3, []int{6}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetBody() string {
	if m != nil {
		return m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*OfferMessage)(nil), "OfferMessage")
	proto.RegisterType((*OfferResponse)(nil), "OfferResponse")
	proto.RegisterType((*PeerMessage)(nil), "PeerMessage")
	proto.RegisterType((*PeerResponse)(nil), "PeerResponse")
	proto.RegisterType((*Offer)(nil), "Offer")
	proto.RegisterType((*Answer)(nil), "Answer")
	proto.RegisterType((*Token)(nil), "Token")
}

func init() { proto.RegisterFile("sdp_exchange.proto", fileDescriptor_c88d59dbcf37a6c3) }

var fileDescriptor_c88d59dbcf37a6c3 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x41, 0x4b, 0xc3, 0x30,
	0x14, 0xc7, 0x1b, 0xb1, 0x5d, 0xf3, 0xd6, 0x7a, 0x08, 0x1e, 0x46, 0x5b, 0x64, 0x64, 0x97, 0x82,
	0x92, 0xc3, 0xfc, 0x02, 0x7a, 0x90, 0x82, 0x20, 0x4a, 0xdd, 0x7d, 0x6c, 0xeb, 0xdb, 0x44, 0x21,
	0x29, 0x4b, 0x40, 0xfd, 0x36, 0x7e, 0x54, 0x49, 0x1a, 0x67, 0x76, 0xd8, 0x2d, 0x79, 0xef, 0xcf,
	0xff, 0xff, 0x7b, 0xef, 0x01, 0xd3, 0x5d, 0xbf, 0xc4, 0xaf, 0xcd, 0xdb, 0x4a, 0xee, 0x50, 0xf4,
	0x7b, 0x65, 0x14, 0xbf, 0x83, 0xec, 0x79, 0xbb, 0xc5, 0xfd, 0x13, 0x6a, 0xbd, 0xda, 0x21, 0xab,
	0x20, 0x36, 0xea, 0x03, 0xe5, 0x84, 0x4c, 0x49, 0x3d, 0x9e, 0x27, 0x62, 0x61, 0x7f, 0xed, 0x50,
	0x64, 0x0c, 0xce, 0xd7, 0xaa, 0xfb, 0x9e, 0x9c, 0x4d, 0x49, 0x4d, 0x5b, 0xf7, 0xe6, 0x33, 0xc8,
	0x9d, 0x43, 0x8b, 0xba, 0x57, 0x52, 0xa3, 0x15, 0x6d, 0x54, 0x87, 0xce, 0x81, 0xb6, 0xee, 0xcd,
	0x67, 0x30, 0x7e, 0xc1, 0xff, 0x94, 0xcb, 0x30, 0x85, 0x7a, 0x77, 0x7e, 0x0d, 0x99, 0x15, 0x1d,
	0x8c, 0x4a, 0xa0, 0x36, 0x61, 0xf9, 0xae, 0xd5, 0x9f, 0x32, 0xb5, 0x85, 0x47, 0xad, 0x24, 0x2f,
	0x21, 0x76, 0xb1, 0x07, 0x26, 0x12, 0x30, 0x55, 0x90, 0xdc, 0x4b, 0xfd, 0x79, 0xa2, 0x5b, 0x42,
	0xbc, 0x38, 0x1a, 0x27, 0x68, 0xce, 0x7f, 0x08, 0xa4, 0x0f, 0x7e, 0x47, 0xac, 0x86, 0x51, 0x83,
	0xc6, 0x42, 0xb1, 0x4c, 0x04, 0x03, 0x14, 0xb9, 0x08, 0x49, 0x79, 0xc4, 0xae, 0x80, 0x36, 0x68,
	0x7c, 0x68, 0x22, 0x1c, 0x5a, 0x31, 0x12, 0x43, 0x81, 0x47, 0xac, 0x82, 0xb4, 0x41, 0x33, 0x10,
	0xfb, 0xa5, 0x16, 0x5e, 0xc6, 0x23, 0x76, 0x03, 0xf4, 0x15, 0x65, 0x37, 0xb4, 0x73, 0x11, 0x5e,
	0xa4, 0xb8, 0x10, 0x47, 0xeb, 0xe5, 0xd1, 0x3a, 0x71, 0xa7, 0xbb, 0xfd, 0x0d, 0x00, 0x00, 0xff,
	0xff, 0xc5, 0xab, 0xed, 0xfa, 0xd0, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ExchangeClient is the client API for Exchange service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ExchangeClient interface {
	GetPeer(ctx context.Context, in *PeerMessage, opts ...grpc.CallOption) (*PeerResponse, error)
	GetAnswer(ctx context.Context, in *Offer, opts ...grpc.CallOption) (*Answer, error)
	GetOffer(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Offer, error)
	SendOffer(ctx context.Context, in *OfferMessage, opts ...grpc.CallOption) (*OfferResponse, error)
}

type exchangeClient struct {
	cc *grpc.ClientConn
}

func NewExchangeClient(cc *grpc.ClientConn) ExchangeClient {
	return &exchangeClient{cc}
}

func (c *exchangeClient) GetPeer(ctx context.Context, in *PeerMessage, opts ...grpc.CallOption) (*PeerResponse, error) {
	out := new(PeerResponse)
	err := c.cc.Invoke(ctx, "/Exchange/GetPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeClient) GetAnswer(ctx context.Context, in *Offer, opts ...grpc.CallOption) (*Answer, error) {
	out := new(Answer)
	err := c.cc.Invoke(ctx, "/Exchange/GetAnswer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeClient) GetOffer(ctx context.Context, in *Token, opts ...grpc.CallOption) (*Offer, error) {
	out := new(Offer)
	err := c.cc.Invoke(ctx, "/Exchange/GetOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *exchangeClient) SendOffer(ctx context.Context, in *OfferMessage, opts ...grpc.CallOption) (*OfferResponse, error) {
	out := new(OfferResponse)
	err := c.cc.Invoke(ctx, "/Exchange/SendOffer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ExchangeServer is the server API for Exchange service.
type ExchangeServer interface {
	GetPeer(context.Context, *PeerMessage) (*PeerResponse, error)
	GetAnswer(context.Context, *Offer) (*Answer, error)
	GetOffer(context.Context, *Token) (*Offer, error)
	SendOffer(context.Context, *OfferMessage) (*OfferResponse, error)
}

// UnimplementedExchangeServer can be embedded to have forward compatible implementations.
type UnimplementedExchangeServer struct {
}

func (*UnimplementedExchangeServer) GetPeer(ctx context.Context, req *PeerMessage) (*PeerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPeer not implemented")
}
func (*UnimplementedExchangeServer) GetAnswer(ctx context.Context, req *Offer) (*Answer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAnswer not implemented")
}
func (*UnimplementedExchangeServer) GetOffer(ctx context.Context, req *Token) (*Offer, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOffer not implemented")
}
func (*UnimplementedExchangeServer) SendOffer(ctx context.Context, req *OfferMessage) (*OfferResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendOffer not implemented")
}

func RegisterExchangeServer(s *grpc.Server, srv ExchangeServer) {
	s.RegisterService(&_Exchange_serviceDesc, srv)
}

func _Exchange_GetPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PeerMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServer).GetPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Exchange/GetPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServer).GetPeer(ctx, req.(*PeerMessage))
	}
	return interceptor(ctx, in, info, handler)
}

func _Exchange_GetAnswer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Offer)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServer).GetAnswer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Exchange/GetAnswer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServer).GetAnswer(ctx, req.(*Offer))
	}
	return interceptor(ctx, in, info, handler)
}

func _Exchange_GetOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Token)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServer).GetOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Exchange/GetOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServer).GetOffer(ctx, req.(*Token))
	}
	return interceptor(ctx, in, info, handler)
}

func _Exchange_SendOffer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ExchangeServer).SendOffer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Exchange/SendOffer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ExchangeServer).SendOffer(ctx, req.(*OfferMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Exchange_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Exchange",
	HandlerType: (*ExchangeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetPeer",
			Handler:    _Exchange_GetPeer_Handler,
		},
		{
			MethodName: "GetAnswer",
			Handler:    _Exchange_GetAnswer_Handler,
		},
		{
			MethodName: "GetOffer",
			Handler:    _Exchange_GetOffer_Handler,
		},
		{
			MethodName: "SendOffer",
			Handler:    _Exchange_SendOffer_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "sdp_exchange.proto",
}
